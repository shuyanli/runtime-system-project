<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: havlak1 Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
/** 
 *  SVGPan library 1.2.1
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the first g 
 * element), including the the library into any SVG adds the following capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behavior of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2010 Andrea Leofreddi <a.leofreddi@itcharm.com>. All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 *    1. Redistributions of source code must retain the above copyright notice, this list of
 *       conditions and the following disclaimer.
 * 
 *    2. Redistributions in binary form must reproduce the above copyright notice, this list
 *       of conditions and the following disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY Andrea Leofreddi ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Andrea Leofreddi OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION 
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)

/// <====
/// END OF CONFIGURATION 

var root = document.documentElement;

var state = 'none', svgRoot, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(typeof(svgRoot) == "undefined") {
		var g = null;

		g = root.getElementById("viewport");

		if(g == null)
			g = root.getElementsByTagName('g')[0];

		if(g == null)
			alert('Unable to obtain SVG root element');

		setCTM(g, g.getCTM());

		g.removeAttribute("viewBox");

		svgRoot = g;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 3600; // Chrome/Safari
	else
		delta = evt.detail / -90; // Mozilla

	var z = 1 + delta; // Zoom factor: 0.9/1.1

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg" 
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element 
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}

]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 748)">
<title>havlak1</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-748 634.8379,-748 634.8379,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_L</title>
<polygon fill="none" stroke="#000000" points="8,-552 8,-736 532,-736 532,-552 8,-552"/>
</g>
<!-- L -->
<g id="node1" class="node">
<title>L</title>
<polygon fill="#f8f8f8" stroke="#000000" points="524.1719,-728 15.8281,-728 15.8281,-560 524.1719,-560 524.1719,-728"/>
<text text-anchor="start" x="23.9141" y="-698.4" font-family="Times,serif" font-size="32.00" fill="#000000">File: havlak1</text>
<text text-anchor="start" x="23.9141" y="-666.4" font-family="Times,serif" font-size="32.00" fill="#000000">Type: cpu</text>
<text text-anchor="start" x="23.9141" y="-634.4" font-family="Times,serif" font-size="32.00" fill="#000000">Time: Apr 25, 2017 at 10:47am (PDT)</text>
<text text-anchor="start" x="23.9141" y="-602.4" font-family="Times,serif" font-size="32.00" fill="#000000">Duration: 20.370922949s</text>
<text text-anchor="start" x="23.9141" y="-570.4" font-family="Times,serif" font-size="32.00" fill="#000000">2760ms of 23130ms total (11.93%)</text>
</g>
<!-- N1 -->
<g id="node2" class="node">
<title>N1</title>
<g id="a_node2"><a xlink:title="runtime.mapaccess1_fast64 (2760ms)">
<polygon fill="#f8f8f8" stroke="#000000" points="623.9102,-166 342.0898,-166 342.0898,-86 623.9102,-86 623.9102,-166"/>
<text text-anchor="middle" x="483" y="-142.8" font-family="Times,serif" font-size="24.00" fill="#000000">runtime.mapaccess1_fast64</text>
<text text-anchor="middle" x="483" y="-118.8" font-family="Times,serif" font-size="24.00" fill="#000000">2550ms(11.02%)</text>
<text text-anchor="middle" x="483" y="-94.8" font-family="Times,serif" font-size="24.00" fill="#000000">of 2760ms(11.93%)</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node3" class="node">
<title>N2</title>
<g id="a_node3"><a xlink:title="runtime.aeshash64 (210ms)">
<polygon fill="#f8f8f8" stroke="#000000" points="539.6128,-36 426.3872,-36 426.3872,0 539.6128,0 539.6128,-36"/>
<text text-anchor="middle" x="483" y="-20.6" font-family="Times,serif" font-size="13.00" fill="#000000">runtime.aeshash64</text>
<text text-anchor="middle" x="483" y="-7.6" font-family="Times,serif" font-size="13.00" fill="#000000">210ms(0.91%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N2 -->
<g id="edge7" class="edge">
<title>N1&#45;&gt;N2</title>
<g id="a_edge7"><a xlink:title="runtime.mapaccess1_fast64 &#45;&gt; runtime.aeshash64 (210ms)">
<path fill="none" stroke="#000000" d="M483,-85.7848C483,-72.7445 483,-58.5548 483,-46.5439"/>
<polygon fill="#000000" stroke="#000000" points="486.5001,-46.2214 483,-36.2215 479.5001,-46.2215 486.5001,-46.2214"/>
</a>
</g>
<g id="a_edge7&#45;label"><a xlink:title="runtime.mapaccess1_fast64 &#45;&gt; runtime.aeshash64 (210ms)">
<text text-anchor="middle" x="503.4189" y="-56.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 210ms</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node4" class="node">
<title>N3</title>
<g id="a_node4"><a xlink:title="main.DFS (1470ms)">
<polygon fill="#f8f8f8" stroke="#000000" points="523.9922,-252 442.0078,-252 442.0078,-216 523.9922,-216 523.9922,-252"/>
<text text-anchor="middle" x="483" y="-235.6" font-family="Times,serif" font-size="8.00" fill="#000000">main.DFS</text>
<text text-anchor="middle" x="483" y="-227.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 1470ms(6.36%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N1 -->
<g id="edge1" class="edge">
<title>N3&#45;&gt;N1</title>
<g id="a_edge1"><a xlink:title="main.DFS &#45;&gt; runtime.mapaccess1_fast64 (1470ms)">
<path fill="none" stroke="#000000" d="M483,-215.6793C483,-204.8316 483,-190.5069 483,-176.4979"/>
<polygon fill="#000000" stroke="#000000" points="486.5001,-176.4072 483,-166.4072 479.5001,-176.4072 486.5001,-176.4072"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title="main.DFS &#45;&gt; runtime.mapaccess1_fast64 (1470ms)">
<text text-anchor="middle" x="506.9189" y="-186.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 1470ms</text>
</a>
</g>
</g>
<!-- N4 -->
<g id="node5" class="node">
<title>N4</title>
<g id="a_node5"><a xlink:title="main.FindHavlakLoops (1290ms)">
<polygon fill="#f8f8f8" stroke="#000000" points="628.7698,-338 537.2302,-338 537.2302,-302 628.7698,-302 628.7698,-338"/>
<text text-anchor="middle" x="583" y="-321.6" font-family="Times,serif" font-size="8.00" fill="#000000">main.FindHavlakLoops</text>
<text text-anchor="middle" x="583" y="-313.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 1290ms(5.58%)</text>
</a>
</g>
</g>
<!-- N5 -->
<g id="node6" class="node">
<title>N5</title>
<g id="a_node6"><a xlink:title="main.FindLoops (1290ms)">
<polygon fill="#f8f8f8" stroke="#000000" points="623.9922,-252 542.0078,-252 542.0078,-216 623.9922,-216 623.9922,-252"/>
<text text-anchor="middle" x="583" y="-235.6" font-family="Times,serif" font-size="8.00" fill="#000000">main.FindLoops</text>
<text text-anchor="middle" x="583" y="-227.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 1290ms(5.58%)</text>
</a>
</g>
</g>
<!-- N4&#45;&gt;N5 -->
<g id="edge2" class="edge">
<title>N4&#45;&gt;N5</title>
<g id="a_edge2"><a xlink:title="main.FindHavlakLoops &#45;&gt; main.FindLoops (1290ms)">
<path fill="none" stroke="#000000" d="M583,-301.7616C583,-290.3597 583,-275.4342 583,-262.494"/>
<polygon fill="#000000" stroke="#000000" points="586.5001,-262.2121 583,-252.2121 579.5001,-262.2121 586.5001,-262.2121"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title="main.FindHavlakLoops &#45;&gt; main.FindLoops (1290ms)">
<text text-anchor="middle" x="606.9189" y="-272.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 1290ms</text>
</a>
</g>
</g>
<!-- N5&#45;&gt;N1 -->
<g id="edge3" class="edge">
<title>N5&#45;&gt;N1</title>
<g id="a_edge3"><a xlink:title="main.FindLoops &#45;&gt; runtime.mapaccess1_fast64 (1290ms)">
<path fill="none" stroke="#000000" d="M566.0364,-215.6793C555.4071,-204.1997 541.1724,-188.8262 527.4942,-174.0537"/>
<polygon fill="#000000" stroke="#000000" points="529.7764,-171.3669 520.4141,-166.4072 524.64,-176.1228 529.7764,-171.3669"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title="main.FindLoops &#45;&gt; runtime.mapaccess1_fast64 (1290ms)">
<text text-anchor="middle" x="571.9189" y="-186.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 1290ms</text>
</a>
</g>
</g>
<!-- N6 -->
<g id="node7" class="node">
<title>N6</title>
<g id="a_node7"><a xlink:title="main.main (1290ms)">
<polygon fill="#f8f8f8" stroke="#000000" points="623.9922,-424 542.0078,-424 542.0078,-388 623.9922,-388 623.9922,-424"/>
<text text-anchor="middle" x="583" y="-407.6" font-family="Times,serif" font-size="8.00" fill="#000000">main.main</text>
<text text-anchor="middle" x="583" y="-399.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 1290ms(5.58%)</text>
</a>
</g>
</g>
<!-- N6&#45;&gt;N4 -->
<g id="edge4" class="edge">
<title>N6&#45;&gt;N4</title>
<g id="a_edge4"><a xlink:title="main.main &#45;&gt; main.FindHavlakLoops (1290ms)">
<path fill="none" stroke="#000000" d="M583,-387.7616C583,-376.3597 583,-361.4342 583,-348.494"/>
<polygon fill="#000000" stroke="#000000" points="586.5001,-348.2121 583,-338.2121 579.5001,-348.2121 586.5001,-348.2121"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="main.main &#45;&gt; main.FindHavlakLoops (1290ms)">
<text text-anchor="middle" x="606.9189" y="-358.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 1290ms</text>
</a>
</g>
</g>
<!-- N7 -->
<g id="node8" class="node">
<title>N7</title>
<g id="a_node8"><a xlink:title="runtime.goexit (1290ms)">
<polygon fill="#f8f8f8" stroke="#000000" points="623.9922,-662 542.0078,-662 542.0078,-626 623.9922,-626 623.9922,-662"/>
<text text-anchor="middle" x="583" y="-645.6" font-family="Times,serif" font-size="8.00" fill="#000000">runtime.goexit</text>
<text text-anchor="middle" x="583" y="-637.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 1290ms(5.58%)</text>
</a>
</g>
</g>
<!-- N8 -->
<g id="node9" class="node">
<title>N8</title>
<g id="a_node9"><a xlink:title="runtime.main (1290ms)">
<polygon fill="#f8f8f8" stroke="#000000" points="623.9922,-510 542.0078,-510 542.0078,-474 623.9922,-474 623.9922,-510"/>
<text text-anchor="middle" x="583" y="-493.6" font-family="Times,serif" font-size="8.00" fill="#000000">runtime.main</text>
<text text-anchor="middle" x="583" y="-485.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 1290ms(5.58%)</text>
</a>
</g>
</g>
<!-- N7&#45;&gt;N8 -->
<g id="edge5" class="edge">
<title>N7&#45;&gt;N8</title>
<g id="a_edge5"><a xlink:title="runtime.goexit &#45;&gt; runtime.main (1290ms)">
<path fill="none" stroke="#000000" d="M583,-625.9667C583,-599.7983 583,-551.0561 583,-520.1368"/>
<polygon fill="#000000" stroke="#000000" points="586.5001,-520.0098 583,-510.0098 579.5001,-520.0099 586.5001,-520.0098"/>
</a>
</g>
<g id="a_edge5&#45;label"><a xlink:title="runtime.goexit &#45;&gt; runtime.main (1290ms)">
<text text-anchor="middle" x="606.9189" y="-530.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 1290ms</text>
</a>
</g>
</g>
<!-- N8&#45;&gt;N6 -->
<g id="edge6" class="edge">
<title>N8&#45;&gt;N6</title>
<g id="a_edge6"><a xlink:title="runtime.main &#45;&gt; main.main (1290ms)">
<path fill="none" stroke="#000000" d="M583,-473.7616C583,-462.3597 583,-447.4342 583,-434.494"/>
<polygon fill="#000000" stroke="#000000" points="586.5001,-434.2121 583,-424.2121 579.5001,-434.2121 586.5001,-434.2121"/>
</a>
</g>
<g id="a_edge6&#45;label"><a xlink:title="runtime.main &#45;&gt; main.main (1290ms)">
<text text-anchor="middle" x="606.9189" y="-444.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 1290ms</text>
</a>
</g>
</g>
</g>
</g></svg>
